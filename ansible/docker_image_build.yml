---
- name: This will build a docker image with the latest source code build
  hosts: localhost
  become: true
  become_method: sudo
  vars_files:
       - docker_token.yml
  vars:
    vol: /tmp/myefs/docker_volume/
    IMAGE: "{{ lookup('env', 'IMAGE') }}"
    WORKSPACE: "{{ lookup('env', 'WORKSPACE') }}"
    DockerHub_repo: "{{ lookup('env', 'DockerHub_repo') }}"
    VER: "{{ lookup('env', 'VER') }}"
    JFrog_repo: "{{ lookup('env', 'JFrog_repo') }}"
    JFrog_docker_folder: "{{ lookup('env', 'JFrog_docker_folder') }}"
    Jfrog_image: "{{ lookup('env', 'Jfrog_image') }}"
    Jfrog_image_tag: "{{ lookup('env', 'Jfrog_image_tag') }}"

  tasks:
  - name: Installing Docker
    yum:
      name: docker
      state: present

  - name: Installing Git
    yum:
      name: git
      state: present

  - name: Start Docker Service
    service:
      name: docker
      state: started

  - name: Enable Docker Service
    service:
      name: docker
      enabled: yes

  - name: Build Docker Image
    args:
      chdir: "{{ WORKSPACE }}"
    shell: docker build -t {{ IMAGE }}:{{ VER }} .
    register: shell_result_docker_build
  - debug:
      var: shell_result_docker_build

  - name: Checking Docker Image
    shell: docker images
    register: shell_result
  - debug:
      var: shell_result

  - name: Installing pip
    yum:
      name: pip
      state: present

  - name: Installing docker-py
    shell: pip install docker-py

  - name: Log into DockerHub
    docker_login:
      username: aamirs
      password: "{{ docker_pass }}"
    register: shell_result
  - debug:
      var: shell_result
      
  - name: Pushing docker image to DockerHub Private Repository
    command: "{{ item }}"
    with_items:
    - docker tag {{ IMAGE  }}:{{ VER}} {{ DockerHub_repo }}:{{ VER}}
    - docker push {{ DockerHub_repo }}:{{ VER}}
    when: shell_result_docker_build.rc == 0
    register: shell_result
  - debug:
      var: shell_result

  # Pushing the same image to Jfrog Private Repository. Please create a free account & create docker repository before using below block of code, OR simply comment it to only use Docker_HUB

  - name: Log into JFrog Private Repository
    docker_login:
      registry_url: radicaloct2022weekday.jfrog.io
      username: radicaloct2022weekday@gmail.com
      password: "{{ docker_pass1 }}"
    register: shell_result
  - debug:
      var: shell_result
      
  - name: Pushing docker image to JFrog Private Repository
    command: "{{ item }}"
    with_items:
    - docker tag {{ IMAGE  }}:{{ VER}} {{JFrog_repo}}/{{JFrog_docker_folder}}/{{Jfrog_image}}:{{Jfrog_image_tag}}
    - docker push {{JFrog_repo}}/{{JFrog_docker_folder}}/{{Jfrog_image}}:{{Jfrog_image_tag}}
    when: shell_result_docker_build.rc == 0
    register: shell_result
  - debug:
      var: shell_result
